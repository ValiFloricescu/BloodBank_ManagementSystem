<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAp9JREFUaEPtmLuvDVEUh69EVERB4dloRCR0CJ0SCX+MR6PwikcilKIQSo2KQgTX
        H4BS4g+gkngL8bh+32TW3HWXPTfse2bOnpgv+ZK99j5z9tqzH2fOzPTIbnlLvpTf5FyGn+RzeVqulb2y
        Q96XqcSW4jt5RHbOZnlT/pR0/Faek9vkiroOjb+ND0i7MXx3Z4NZLS/IL5LOWEZX5RrpscSMf4mXSW4K
        MTcoe5lxRy/J19I6iP6St+UW2RVPJH2dqqIMLsqYuMkAHstdsmv2S/rkAMjileQL9lZRO36Ak9KzUlL3
        oYoyeCNjB14j1bZUPaskde+rKIPLMnbgnZV7ZNfY0npWRRkslwxmsZlhr9yRW2VX3JP0lb3ZF4Pj97y0
        4/e7vC7Xy0lyUvL9HL/xaJ8om+QN+UPS4Wd5Re6UHN85sLlZTjYT/CAelr2wXd6VdDxJmYneBuFhJq7J
        FzL3oZFj9qlkT3S6nEZGHP4BkEcPnlxzT5WpknoA5HdgcPgHwH11mbrBYbNgxHgwjAMpjXEgpfFfDeSQ
        fCR50/exLh+UngfSru3aZA7WaMTY3h+lPCuNVHsfnpEVVmH4mJmg/FUelfzLw2N1HW12V/x1XbNBnpD2
        d4C3j38k4GPeT1FmEJHjkjamGPx1fcFg6PMhQUzAx6xFyuuqaCHU0WbvlPx1fbEgh5iAj/kA5dSLg42S
        Nnun5K/rk6bfmICPWTaU2RMRm9ZpLi1o+o0J+JiNTJmNzZ5gk8WNNo3N7mn6jQnEmCPW6qKp47dvmn5j
        AjEG7jpLiM3f9oOYuq4Pmn5jAhYPzflCjW8ckvOFgTIOpDTGgZRG60AsLl2jidsaStdo4taGQmnNt7Wh
        UFrzbW0olNZ8rRAtlVSumKzEUknkOjP3G34muY2nx1Z0AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAl1JREFUaEPtmE1O3EAQhecSISFikRVZBSlSdjkPIJFDJDsuEohyE1aQhP+wyAq4
        AGuS9xlKKZV6PG4L290jPunJ7hmPXa+rumtmZoVyKP2SXjWjivkp/ZXOparNrEgnEmYupddSlbyUzEi1
        ZiglSspKy59XU2Y+ExcSWSiqzLrsQjET/tq290bFdqFTiVmPdAm0CDO+PGIQqXKaRxFl5mf0TCKo3Fn2
        13f9zJMTg8BMXxMc7fyHNBrzguhrgjHCxIE0Cn4N/JZyt9ScNTQYfibvpfeSkZrlSJdrBiea4HgskQ2j
        LdAiTPhy+CN9kGiIFtSqZKTKrLhyupLWJPABs2O1zb4/nyQTPqC4JoCZxgTvx23Tf7YoExzJAMF7uG7e
        tunvwdcZv55GwQdAOZEJK6PchhXNMB6FaMLWBJno07D8/RDng5vxD02tiVz8/Tj688HMRBMcY5/IIZpg
        7F/LLdFO+AfYmsAE49QCX0TKhMF5nxJdiG9WNLs3EryQzExOE/P3G635+ZnL7RMp2jIxGNEEx9w+4Znc
        BOnfkPr2CZjchP2eADLRZxFObmKIPjGJCY5P3SdGgT/V7KHvpKH6xOBcSzz4YzNq/z3RxqQm4JvEw3ea
        0QNV9InItkQA35vRfwim2D6R4q1EELfNKA8yN/rXjjZsnaw3o24UZwL2JQLabEaLKdIE2Dr52ozaKdYE
        7EoEdidhZkti7USKWdgpvkgElhIbALvZJ4k+U40JMkM29qSbx9eiijfBOEJ5sX5ommTnSCraxGepOp5N
        lMRSmIClMAFLYQJSW2xFzGb/ADRfZsu0CWAQAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAABJRU5ErkJggg==
</value>
  </data>
</root>